class MapDirectionFinder{constructor(e={}){this.startAddress=e.startAddress||"221B Baker Street, London, UK",this.destinationAddress=e.destinationAddress||"Andover Park, Andover, UK",this.MAPS_API_KEY="AIzaSyBGpxtUlMBb59npiLEw5qKkWUO8F6Foet4",this.startCoords=null,this.destCoords=null,this.map=null,this.marker=null,this.directionsService=null,this.directionsRenderer=null,this.init()}async init(){await this.loadGoogleMapsAPI(),await this.initMap()}loadGoogleMapsAPI(){return new Promise(((e,t)=>{if(window.google&&window.google.maps)return void e();const s=document.createElement("script");s.src=`https://maps.googleapis.com/maps/api/js?key=${this.MAPS_API_KEY}&libraries=places`,s.async=!0,s.defer=!0,window.initGoogleMaps=()=>e(),s.src+="&callback=initGoogleMaps",s.onerror=()=>t(new Error("Failed to load Google Maps API")),document.head.appendChild(s)}))}async initMap(){try{this.directionsService=new google.maps.DirectionsService,this.directionsRenderer=new google.maps.DirectionsRenderer({suppressMarkers:!0,polylineOptions:{strokeColor:"#76a668",strokeWeight:4}}),this.startCoords=await this.geocodeAddress(this.startAddress),this.destCoords=await this.geocodeAddress(this.destinationAddress),this.map=new google.maps.Map(document.getElementById("map"),{zoom:14,center:this.destCoords,mapTypeControl:!1,streetViewControl:!1,fullscreenControl:!1,styles:[{featureType:"all",elementType:"labels.text.fill",stylers:[{color:"#28303F"}]},{featureType:"all",elementType:"labels.text.stroke",stylers:[{visibility:"on"},{color:"#ffffff"}]}]}),this.marker=new google.maps.Marker({position:this.destCoords,map:this.map,title:"Destination"}),this.directionsRenderer.setMap(this.map),this.initializeEventListeners(),this.calculateRoute(this.startCoords,this.destCoords)}catch(e){console.error("Error initializing map:",e)}}geocodeAddress(e){return new Promise(((t,s)=>{(new google.maps.Geocoder).geocode({address:e},((o,i)=>{"OK"===i?t({lat:o[0].geometry.location.lat(),lng:o[0].geometry.location.lng()}):s(new Error(`Geocoding failed for address: ${e}`))}))}))}initializeEventListeners(){const e=w$("userDash_directions_search"),t=w$("userDash_directions_findMe"),s=w$("userDash_directions_openGoogleMap");if(e){e.value=this.startAddress;const t=new google.maps.places.Autocomplete(e,{fields:["geometry","formatted_address"],componentRestrictions:{country:"uk"}});t.addListener("place_changed",(async()=>{const e=t.getPlace();e.geometry&&(this.startCoords={lat:e.geometry.location.lat(),lng:e.geometry.location.lng()},this.startAddress=e.formatted_address,this.calculateRoute(this.startCoords,this.destCoords))}))}t&&t.addEventListener("click",(()=>this.getCurrentLocation())),s&&s.addEventListener("click",(e=>{e.preventDefault(),this.openInGoogleMaps()}))}getCurrentLocation(){navigator.geolocation?navigator.geolocation.getCurrentPosition((async e=>{try{this.startCoords={lat:e.coords.latitude,lng:e.coords.longitude};const t=new google.maps.Geocoder,{results:s}=await t.geocode({location:this.startCoords});s&&s[0]&&(this.startAddress=s[0].formatted_address,w$("userDash_directions_search").value=this.startAddress,this.calculateRoute(this.startAddress,this.destinationAddress))}catch(e){console.error("Error reverse geocoding:",e),alert("Error getting address from location")}}),(e=>{switch(console.error("Geolocation error:",e),e.code){case e.PERMISSION_DENIED:alert("Please allow location access to use this feature");break;case e.POSITION_UNAVAILABLE:alert("Location information is unavailable");break;case e.TIMEOUT:alert("Location request timed out");break;default:alert("Unable to get your location")}}),{enableHighAccuracy:!0,timeout:5e3,maximumAge:0}):alert("Geolocation is not supported by your browser")}calculateRoute(e,t){const s={origin:"string"==typeof e?e:new google.maps.LatLng(e.lat,e.lng),destination:"string"==typeof t?t:new google.maps.LatLng(t.lat,t.lng),travelMode:google.maps.TravelMode.DRIVING};this.directionsService.route(s,((e,t)=>{"OK"===t?(this.directionsRenderer.setDirections(e),this.updateDirectionsList(e.routes[0].legs[0])):(console.error("Directions error:",t),alert("Could not calculate directions. Please try again."))}))}updateDirectionsList(e){const t=w$("userDash_directions_miles");t&&(t.textContent=e.distance.text);const s=new Date,o=Math.ceil(e.duration.value/60);s.setMinutes(s.getMinutes()+o);const i=s.toLocaleTimeString("en-US",{hour:"2-digit",minute:"2-digit",hour12:!1}),r=w$("userDash_directions_leaveBy");r&&(r.textContent=`Leave by ${i}`);const n=w$("userDash_directions_steps");n&&(n.innerHTML=e.steps.map(((t,s)=>`\n                <div class="ud-gd_directions-bd-item${0===s?" ic-active":""}">\n                    <div class="ud-gd_directions-bd-icon${0===s?" ic-active":""}">\n                        ${s<e.steps.length-1?'<div class="ud-gd_directions-bd-icon_line"></div>':""}\n                    </div>\n                    <div class="text-size-medium text-weight-medium">\n                        ${s+1} &nbsp; ${t.instructions.replace(/<[^>]*>/g,"")}\n                    </div>\n                </div>\n            `)).join(""))}openInGoogleMaps(){const e=`https://www.google.com/maps/dir/?api=1&origin=${encodeURIComponent(this.startAddress)}&destination=${encodeURIComponent(this.destinationAddress)}`;window.open(e,"_blank")}updateAddresses(e,t){this.startAddress=e,this.destinationAddress=t,this.init()}}window.updateMapDirections=async function(e,t){window.mapInstance?window.mapInstance.updateAddresses(e,t):window.mapInstance=new MapDirectionFinder({startAddress:e,destinationAddress:t})},window.MapDirectionFinder=MapDirectionFinder;